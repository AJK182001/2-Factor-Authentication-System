{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\OneDrive\\\\Desktop\\\\Crypto 2FA\\\\Login cursor\\\\src\\\\components\\\\OtpPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpPage = () => {\n  _s();\n  const [otp, setOtp] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!otp.trim()) {\n      setError('OTP code is required');\n      return;\n    }\n    if (otp.length < 4) {\n      setError('OTP code must be at least 4 characters');\n      return;\n    }\n\n    // Clear any previous errors\n    setError('');\n\n    // Simulate OTP validation (static check)\n    if (otp === '1234') {\n      setSuccess('OTP verified successfully!');\n      // In a real app, you might navigate to a dashboard or home page\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n    } else {\n      setError('Invalid OTP code');\n    }\n  };\n  const handleBackToLogin = () => {\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter OTP Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"otp\",\n          children: \"One-Time Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"otp\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          placeholder: \"Enter your OTP code\",\n          maxLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleBackToLogin,\n        style: {\n          marginTop: '0.5rem',\n          backgroundColor: '#6c757d'\n        },\n        children: \"Back to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        fontSize: '0.875rem',\n        color: '#666',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Demo: Use \\\"1234\\\" as the OTP code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(OtpPage, \"qvG4v+d9Ph11oHUu9u7Hh3csn6A=\", false, function () {\n  return [useNavigate];\n});\n_c = OtpPage;\nexport default OtpPage;\nvar _c;\n$RefreshReg$(_c, \"OtpPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","OtpPage","_s","otp","setOtp","error","setError","success","setSuccess","navigate","handleSubmit","e","preventDefault","trim","length","setTimeout","handleBackToLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","maxLength","onClick","style","marginTop","backgroundColor","fontSize","color","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/anton/OneDrive/Desktop/Crypto 2FA/Login cursor/src/components/OtpPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst OtpPage = () => {\r\n  const [otp, setOtp] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Basic validation\r\n    if (!otp.trim()) {\r\n      setError('OTP code is required');\r\n      return;\r\n    }\r\n\r\n    if (otp.length < 4) {\r\n      setError('OTP code must be at least 4 characters');\r\n      return;\r\n    }\r\n\r\n    // Clear any previous errors\r\n    setError('');\r\n    \r\n    // Simulate OTP validation (static check)\r\n    if (otp === '1234') {\r\n      setSuccess('OTP verified successfully!');\r\n      // In a real app, you might navigate to a dashboard or home page\r\n      setTimeout(() => {\r\n        navigate('/login');\r\n      }, 2000);\r\n    } else {\r\n      setError('Invalid OTP code');\r\n    }\r\n  };\r\n\r\n  const handleBackToLogin = () => {\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Enter OTP Code</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"otp\">One-Time Password:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"otp\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n            placeholder=\"Enter your OTP code\"\r\n            maxLength=\"6\"\r\n          />\r\n        </div>\r\n        \r\n        {error && <div className=\"error\">{error}</div>}\r\n        {success && <div className=\"success\">{success}</div>}\r\n        \r\n        <button type=\"submit\">Submit OTP</button>\r\n        <button \r\n          type=\"button\" \r\n          onClick={handleBackToLogin}\r\n          style={{ marginTop: '0.5rem', backgroundColor: '#6c757d' }}\r\n        >\r\n          Back to Login\r\n        </button>\r\n      </form>\r\n      \r\n      <div style={{ marginTop: '1rem', fontSize: '0.875rem', color: '#666', textAlign: 'center' }}>\r\n        <p>Demo: Use \"1234\" as the OTP code</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACT,GAAG,CAACU,IAAI,CAAC,CAAC,EAAE;MACfP,QAAQ,CAAC,sBAAsB,CAAC;MAChC;IACF;IAEA,IAAIH,GAAG,CAACW,MAAM,GAAG,CAAC,EAAE;MAClBR,QAAQ,CAAC,wCAAwC,CAAC;MAClD;IACF;;IAEA;IACAA,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACA,IAAIH,GAAG,KAAK,MAAM,EAAE;MAClBK,UAAU,CAAC,4BAA4B,CAAC;MACxC;MACAO,UAAU,CAAC,MAAM;QACfN,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLH,QAAQ,CAAC,kBAAkB,CAAC;IAC9B;EACF,CAAC;EAED,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9BP,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACET,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlB,OAAA;MAAAkB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBtB,OAAA;MAAMuB,QAAQ,EAAEb,YAAa;MAAAQ,QAAA,gBAC3BlB,OAAA;QAAKiB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBlB,OAAA;UAAOwB,OAAO,EAAC,KAAK;UAAAN,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/CtB,OAAA;UACEyB,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,KAAK;UACRC,KAAK,EAAExB,GAAI;UACXyB,QAAQ,EAAGjB,CAAC,IAAKP,MAAM,CAACO,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;UACxCG,WAAW,EAAC,qBAAqB;UACjCC,SAAS,EAAC;QAAG;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAELjB,KAAK,iBAAIL,OAAA;QAAKiB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEb;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAC7Cf,OAAO,iBAAIP,OAAA;QAAKiB,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAEX;MAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEpDtB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzCtB,OAAA;QACEyB,IAAI,EAAC,QAAQ;QACbO,OAAO,EAAEhB,iBAAkB;QAC3BiB,KAAK,EAAE;UAAEC,SAAS,EAAE,QAAQ;UAAEC,eAAe,EAAE;QAAU,CAAE;QAAAjB,QAAA,EAC5D;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEPtB,OAAA;MAAKiC,KAAK,EAAE;QAAEC,SAAS,EAAE,MAAM;QAAEE,QAAQ,EAAE,UAAU;QAAEC,KAAK,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAApB,QAAA,eAC1FlB,OAAA;QAAAkB,QAAA,EAAG;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzEID,OAAO;EAAA,QAIMH,WAAW;AAAA;AAAAyC,EAAA,GAJxBtC,OAAO;AA2Eb,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}