{"ast":null,"code":"var _jsxFileName = \"D:\\\\MS\\\\FIT5163\\\\project\\\\2-Factor-Authentication-System\\\\src\\\\components\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { db } from './firebase'; // adjust path to your firebase.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!username.trim()) {\n      setError('Username is required');\n      return;\n    }\n    if (!password.trim()) {\n      setError('Password is required');\n      return;\n    }\n    try {\n      // Query Firestore users collection\n      const usersRef = collection(db, 'users');\n      const q = query(usersRef, where('email', '==', username), where('password', '==', password));\n      const querySnapshot = await getDocs(q);\n      if (!querySnapshot.empty) {\n        // Clear errors and show success\n        setError('');\n        setSuccess('Verification successful! Redirecting to OTP...');\n\n        // Redirect to OTP after short delay\n        setTimeout(() => {\n          navigate('/otp');\n        }, 1500);\n      } else {\n        setError('Invalid username or password');\n        setSuccess('');\n      }\n    } catch (err) {\n      console.error('Error checking login:', err);\n      setError('Something went wrong. Please try again.');\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"auth-title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          className: \"form-label\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          className: \"form-input\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Enter your username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          className: \"form-input\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message message-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message message-success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"WAHnh3OtwT7QKwyxWYWaiIXnWkY=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","collection","query","where","getDocs","db","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","error","setError","success","setSuccess","navigate","handleSubmit","e","preventDefault","trim","usersRef","q","querySnapshot","empty","setTimeout","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["D:/MS/FIT5163/project/2-Factor-Authentication-System/src/components/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\nimport { db } from './firebase'; // adjust path to your firebase.js\r\n\r\nconst LoginPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Basic validation\r\n    if (!username.trim()) {\r\n      setError('Username is required');\r\n      return;\r\n    }\r\n    \r\n    if (!password.trim()) {\r\n      setError('Password is required');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Query Firestore users collection\r\n      const usersRef = collection(db, 'users');\r\n      const q = query(\r\n        usersRef,\r\n        where('email', '==', username),\r\n        where('password', '==', password)\r\n      );\r\n\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      if (!querySnapshot.empty) {\r\n        // Clear errors and show success\r\n        setError('');\r\n        setSuccess('Verification successful! Redirecting to OTP...');\r\n        \r\n        // Redirect to OTP after short delay\r\n        setTimeout(() => {\r\n          navigate('/otp');\r\n        }, 1500);\r\n      } else {\r\n        setError('Invalid username or password');\r\n        setSuccess('');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error checking login:', err);\r\n      setError('Something went wrong. Please try again.');\r\n      setSuccess('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-card\">\r\n      <h1 className=\"auth-title\">Login</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\" className=\"form-label\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            className=\"form-input\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Enter your username\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            className=\"form-input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Enter your password\"\r\n          />\r\n        </div>\r\n        \r\n        {error && <div className=\"message message-error\">{error}</div>}\r\n        {success && <div className=\"message message-success\">{success}</div>}\r\n        \r\n        <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}